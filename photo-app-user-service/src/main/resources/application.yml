server:
  # port: 0 # Assign port number automatically, useful when multiple instances are to be created
  # get these values as arguments when starting the application
  port: ${PORT:0}

spring:
  application:
    name: user-ws
  devtools:
    restart:
      enabled: true
  # h2 in-memory database
  datasource:
    url: jdbc:h2:~/test
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
        # h2 db firewall built-in and because we are going to connect to users microservice through the Spring Cloud API Gateway,
        # we need to enable connections from other addresses.

eureka:
  instance:
    # instance-id has to be unique to register multiple instances of same service in eureka.
    # get these values as arguments when starting the application.
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    serviceUrl:
      defaultZone: http://localhost:8010/eureka

gateway:
  ip: 192.168.0.158
